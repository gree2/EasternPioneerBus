package com.hql.gree2.easternpioneerbus.dao;

import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 

/**
 * Entity mapped to table BUS_STOP_IMAGE.
 */
public class BusStopImage {

    private Long id;
    private long busStopId;
    private Integer imageIndex;
    private String imageName;

    /**
     * Used to resolve relations
     */
    private transient DaoSession daoSession;

    /**
     * Used for active entity operations.
     */
    private transient BusStopImageDao myDao;

    private BusStop busStop;
    private Long busStop__resolvedKey;


    public BusStopImage() {
    }

    public BusStopImage(Long id) {
        this.id = id;
    }

    public BusStopImage(Long id, long busStopId, Integer imageIndex, String imageName) {
        this.id = id;
        this.busStopId = busStopId;
        this.imageIndex = imageIndex;
        this.imageName = imageName;
    }

    /**
     * called by internal mechanisms, do not call yourself.
     */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getBusStopImageDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public long getBusStopId() {
        return busStopId;
    }

    public void setBusStopId(long busStopId) {
        this.busStopId = busStopId;
    }

    public Integer getImageIndex() {
        return imageIndex;
    }

    public void setImageIndex(Integer imageIndex) {
        this.imageIndex = imageIndex;
    }

    public String getImageName() {
        return imageName;
    }

    public void setImageName(String imageName) {
        this.imageName = imageName;
    }

    /**
     * To-one relationship, resolved on first access.
     */
    public BusStop getBusStop() {
        long __key = this.busStopId;
        if (busStop__resolvedKey == null || !busStop__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            BusStopDao targetDao = daoSession.getBusStopDao();
            BusStop busStopNew = targetDao.load(__key);
            synchronized (this) {
                busStop = busStopNew;
                busStop__resolvedKey = __key;
            }
        }
        return busStop;
    }

    public void setBusStop(BusStop busStop) {
        if (busStop == null) {
            throw new DaoException("To-one property 'busStopId' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.busStop = busStop;
            busStopId = busStop.getId();
            busStop__resolvedKey = busStopId;
        }
    }

    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
        myDao.delete(this);
    }

    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
        myDao.update(this);
    }

    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
        myDao.refresh(this);
    }

}
